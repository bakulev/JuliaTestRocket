2025-08-27T07:21:40.0606213Z ##[group]Run julia-actions/cache@v1
2025-08-27T07:21:40.0606614Z with:
2025-08-27T07:21:40.0606861Z   cache-name: julia-cache;workflow=CI;job=test
2025-08-27T07:21:40.0607197Z   include-matrix: true
2025-08-27T07:21:40.0607441Z   cache-artifacts: true
2025-08-27T07:21:40.0607675Z   cache-packages: true
2025-08-27T07:21:40.0607914Z   cache-registries: true
2025-08-27T07:21:40.0608158Z   cache-compiled: true
2025-08-27T07:21:40.0608385Z   cache-scratchspaces: true
2025-08-27T07:21:40.0608657Z   cache-logs: true
2025-08-27T07:21:40.0608870Z   delete-old-caches: true
2025-08-27T07:21:40.0609262Z   token: ***
2025-08-27T07:21:40.0609467Z ##[endgroup]
2025-08-27T07:21:40.0790401Z ##[group]Run if [ -n "" ]; then
2025-08-27T07:21:40.0790710Z [36;1mif [ -n "" ]; then[0m
2025-08-27T07:21:40.0790916Z [36;1m    depot=""[0m
2025-08-27T07:21:40.0791136Z [36;1melif [ -n "$JULIA_DEPOT_PATH" ]; then[0m
2025-08-27T07:21:40.0791407Z [36;1m    # Use the first depot path[0m
2025-08-27T07:21:40.0791714Z [36;1m    depot=$(echo $JULIA_DEPOT_PATH | cut -d$PATH_DELIMITER -f1)[0m
2025-08-27T07:21:40.0792045Z [36;1melse[0m
2025-08-27T07:21:40.0792212Z [36;1m    depot="~/.julia"[0m
2025-08-27T07:21:40.0792399Z [36;1mfi[0m
2025-08-27T07:21:40.0792588Z [36;1mecho "depot=$depot" | tee -a "$GITHUB_OUTPUT"[0m
2025-08-27T07:21:40.0792830Z [36;1m[0m
2025-08-27T07:21:40.0792976Z [36;1mcache_paths=()[0m
2025-08-27T07:21:40.0793191Z [36;1martifacts_path="${depot}/artifacts"[0m
2025-08-27T07:21:40.0793478Z [36;1m[ "true" = "true" ] && cache_paths+=("$artifacts_path")[0m
2025-08-27T07:21:40.0793762Z [36;1mpackages_path="${depot}/packages"[0m
2025-08-27T07:21:40.0794035Z [36;1m[ "true" = "true" ] && cache_paths+=("$packages_path")[0m
2025-08-27T07:21:40.0794314Z [36;1mregistries_path="${depot}/registries"[0m
2025-08-27T07:21:40.0794555Z [36;1mif [ "true" = "true" ]; then[0m
2025-08-27T07:21:40.0794798Z [36;1m    if [ ! -d "${registries_path/#\~/$HOME}" ]; then[0m
2025-08-27T07:21:40.0795080Z [36;1m        cache_paths+=("$registries_path")[0m
2025-08-27T07:21:40.0795313Z [36;1m    else[0m
2025-08-27T07:21:40.0796080Z [36;1m        echo "::warning::Julia depot registries already exist. Skipping restoring of cached registries to avoid potential merge conflicts when updating. Please ensure that \`julia-actions/cache\` precedes any workflow steps which add registries."[0m
2025-08-27T07:21:40.0796901Z [36;1m    fi[0m
2025-08-27T07:21:40.0797260Z [36;1mfi[0m
2025-08-27T07:21:40.0797429Z [36;1mcompiled_path="${depot}/compiled"[0m
2025-08-27T07:21:40.0797706Z [36;1m[ "true" = "true" ] && cache_paths+=("$compiled_path")[0m
2025-08-27T07:21:40.0798008Z [36;1mscratchspaces_path="${depot}/scratchspaces"[0m
2025-08-27T07:21:40.0798305Z [36;1m[ "true" = "true" ] && cache_paths+=("$scratchspaces_path")[0m
2025-08-27T07:21:40.0798578Z [36;1mlogs_path="${depot}/logs"[0m
2025-08-27T07:21:40.0798821Z [36;1m[ "true" = "true" ] && cache_paths+=("$logs_path")[0m
2025-08-27T07:21:40.0799056Z [36;1m{[0m
2025-08-27T07:21:40.0799218Z [36;1m    echo "cache-paths<<EOF"[0m
2025-08-27T07:21:40.0799443Z [36;1m    printf "%s\n" "${cache_paths[@]}"[0m
2025-08-27T07:21:40.0799672Z [36;1m    echo "EOF"[0m
2025-08-27T07:21:40.0799861Z [36;1m} | tee -a "$GITHUB_OUTPUT"[0m
2025-08-27T07:21:40.0816297Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-27T07:21:40.0816655Z env:
2025-08-27T07:21:40.0816830Z   PATH_DELIMITER: ;
2025-08-27T07:21:40.0817003Z ##[endgroup]
2025-08-27T07:21:40.2768908Z depot=~/.julia
2025-08-27T07:21:40.3070729Z cache-paths<<EOF
2025-08-27T07:21:40.3071085Z ~/.julia/artifacts
2025-08-27T07:21:40.3071587Z ~/.julia/packages
2025-08-27T07:21:40.3071864Z ~/.julia/registries
2025-08-27T07:21:40.3072136Z ~/.julia/compiled
2025-08-27T07:21:40.3072423Z ~/.julia/scratchspaces
2025-08-27T07:21:40.3072712Z ~/.julia/logs
2025-08-27T07:21:40.3072956Z EOF
2025-08-27T07:21:40.3275941Z ##[group]Run # `matrix_key` joins all of matrix keys/values (including nested objects) to ensure that concurrent runs each use a unique cache key.
2025-08-27T07:21:40.3278716Z [36;1m# `matrix_key` joins all of matrix keys/values (including nested objects) to ensure that concurrent runs each use a unique cache key.[0m
2025-08-27T07:21:40.3279387Z [36;1m# When `matrix` isn't set for the job then `MATRIX_JSON=null`.[0m
2025-08-27T07:21:40.3279823Z [36;1mif [ "true" == "true" ] && [ "$MATRIX_JSON" != "null" ]; then[0m
2025-08-27T07:21:40.3280413Z [36;1m  matrix_key=$(echo "$MATRIX_JSON" | jq 'paths(type != "object") as $p | ($p | join("-")) + "=" + (getpath($p) | tostring)' | jq -rs 'join(";") | . + ";"')[0m
2025-08-27T07:21:40.3280942Z [36;1mfi[0m
2025-08-27T07:21:40.3281320Z [36;1mrestore_key="julia-cache;workflow=CI;job=test;os=Windows;${matrix_key}"[0m
2025-08-27T07:21:40.3281742Z [36;1m# URL encode any restricted characters:[0m
2025-08-27T07:21:40.3282364Z [36;1m# https://github.com/actions/toolkit/blob/5430c5d84832076372990c7c27f900878ff66dc9/packages/cache/src/cache.ts#L38-L43[0m
2025-08-27T07:21:40.3283028Z [36;1mrestore_key=$(sed 's/,/%2C/g' <<<"${restore_key}")[0m
2025-08-27T07:21:40.3283385Z [36;1mkey="${restore_key}run_id=17260080498;run_attempt=1"[0m
2025-08-27T07:21:40.3283766Z [36;1mecho "restore-key=${restore_key}" >> $GITHUB_OUTPUT[0m
2025-08-27T07:21:40.3284072Z [36;1mecho "key=${key}" >> $GITHUB_OUTPUT[0m
2025-08-27T07:21:40.3295626Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-27T07:21:40.3295991Z env:
2025-08-27T07:21:40.3296256Z   MATRIX_JSON: {
  "version": "nightly",
  "os": "windows-latest",
  "arch": "x64"
}
2025-08-27T07:21:40.3296591Z ##[endgroup]
2025-08-27T07:21:40.6013839Z ##[group]Run actions/cache@4d4ae6ae148a43d0fd1eda1800170683e9882738
2025-08-27T07:21:40.6014367Z with:
2025-08-27T07:21:40.6015088Z   path: ~/.julia/artifacts
~/.julia/packages
~/.julia/registries
~/.julia/compiled
~/.julia/scratchspaces
~/.julia/logs

2025-08-27T07:21:40.6016391Z   key: julia-cache;workflow=CI;job=test;os=Windows;version=nightly;os=windows-latest;arch=x64;run_id=17260080498;run_attempt=1
2025-08-27T07:21:40.6017537Z   restore-keys: julia-cache;workflow=CI;job=test;os=Windows;version=nightly;os=windows-latest;arch=x64;
2025-08-27T07:21:40.6018261Z   enableCrossOsArchive: false
2025-08-27T07:21:40.6018609Z   fail-on-cache-miss: false
2025-08-27T07:21:40.6018928Z   lookup-only: false
2025-08-27T07:21:40.6019211Z ##[endgroup]
2025-08-27T07:21:41.0802570Z ##[warning]Failed to restore: Cache service responded with 400
2025-08-27T07:21:41.0803782Z Cache not found for input keys: julia-cache;workflow=CI;job=test;os=Windows;version=nightly;os=windows-latest;arch=x64;run_id=17260080498;run_attempt=1, julia-cache;workflow=CI;job=test;os=Windows;version=nightly;os=windows-latest;arch=x64;
2025-08-27T07:21:41.0974643Z ##[group]Run mkdir -p ~/.julia
2025-08-27T07:21:41.0974903Z [36;1mmkdir -p ~/.julia[0m
2025-08-27T07:21:41.0975127Z [36;1mdu -shc ~/.julia/* || true[0m
2025-08-27T07:21:41.0986546Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-27T07:21:41.0986895Z ##[endgroup]
2025-08-27T07:21:41.1855917Z du: cannot access '/c/Users/runneradmin/.julia/*': No such file or directory
2025-08-27T07:21:41.1856919Z 0	total
2025-08-27T07:21:41.1999840Z ##[group]Run pyTooling/Actions/with-post-step@adef08d3bdef092282614f3b683897cefae82ee3
2025-08-27T07:21:41.2000208Z with:
2025-08-27T07:21:41.2000367Z   main: echo ""
2025-08-27T07:21:41.2000975Z   post: cd %GITHUB_ACTION_PATH% && julia handle_caches.jl rm "bakulev/JuliaTestRocket" "julia-cache;workflow=CI;job=test;os=Windows;version=nightly;os=windows-latest;arch=x64;" "refs/heads/main" "true"
2025-08-27T07:21:41.2001703Z   key: POST
2025-08-27T07:21:41.2001844Z env:
2025-08-27T07:21:41.2002370Z   GH_TOKEN: ***
2025-08-27T07:21:41.2002544Z ##[endgroup]
2025-08-27T07:21:41.2473440Z ""
2025-08-27T07:21:41.2631438Z ##[group]Run echo "cache-hit=$CACHE_HIT" >> $GITHUB_OUTPUT
2025-08-27T07:21:41.2632530Z [36;1mecho "cache-hit=$CACHE_HIT" >> $GITHUB_OUTPUT[0m
2025-08-27T07:21:41.2643561Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-27T07:21:41.2643899Z env:
2025-08-27T07:21:41.2644032Z   CACHE_HIT: 
2025-08-27T07:21:41.2644186Z ##[endgroup]
